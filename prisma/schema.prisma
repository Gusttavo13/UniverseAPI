// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String              @id @default(uuid())
  name                String
  email               String              @unique
  password            String
  authenticationTypes AuthenticationTypes @default(EMAIL)
  is_logged           Boolean             @default(false)
  is_verify_email     Boolean             @default(false)
  ip                  String?
  status              Boolean             @default(false)
  refresh_token       RefreshToken?
  role                Role                @default(CUSTOMER)
  createdAt           DateTime            @default(now())
  updateAt            DateTime            @default(now())
  @@map("users")
}

model RefreshToken {
  id            String  @id
  expiresIn     Int
  user          User    @relation(fields: [userId], references: [id])
  userId        String  @unique 
  createdAt                 DateTime                @default(now())
  updateAt                  DateTime                @default(now())

  @@map("refresh_token")
}

model Products {
  id                        Int                     @id @default(autoincrement())
  code                      String                  @unique @default(cuid())
  name                      String                  @db.VarChar(1000)
  description               String?                 @db.Text()
  sourceList                String?                 @db.Text()
  source                    String?                 @db.Text()
  tags                      String                  @db.VarChar(1000)
  colors                    String?                 @db.Text()
  sizes                     String?                 @db.Text()
  models                    String?                 @db.Text()
  save_price                Float?                  @default(0)
  descont_price             Float?                  @default(0)
  favorites                 Int                     @default(0)
  brand                     String                  @db.VarChar(1000)
  stars                     Float?                  @default(5)
  allstars                  Int?                    @default(0)
  price                     Float
  showcase                  String                  @db.Text()
  weight                    Float?                  @default(0)
  dimensions                String?                 @default("0x0x0")
  images                    Images[]
  productShowcase           ProductsShowcase[]
  stock                     Int?                    @default(999)  

  createdAt                 DateTime                @default(now())
  updateAt                  DateTime                @default(now())
  @@map("products")
}

model ProductsShowcase {
  id            Int               @id @default(autoincrement())
  code_product  String
  product       Products?         @relation(fields: [code_product], references: [code])
  tag           String?
  visible       Boolean           @default(true)
  @@map("productsshowcase") 
}

model Images {
  id        Int              @id @default(autoincrement())
  name      String
  image_url String
  path      String
  alt       String
  product   Products? @relation(fields: [image_url], references: [code])
  @@map("images") 
}

model Tags {
  id Int              @id @default(autoincrement())
  code String            @default(cuid())       
  tag String
  description String?
  @@map("tags") 
}


enum Role {
  DIRECTOR
  ADMINISTRATOR
  PROGRAMMER
  CUSTOMER

}
  
enum AuthenticationTypes {
  EMAIL
  GITHUB
  GOOGLE
  LINKEDIN
  INSTAGRAM
}